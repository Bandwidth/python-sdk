"""
    Bandwidth

    Bandwidth's Communication APIs  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: letstalk@bandwidth.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from bandwidth.model_utils import (  # noqa: F401
    ApiTypeError,
    ModelComposed,
    ModelNormal,
    ModelSimple,
    cached_property,
    change_keys_js_to_python,
    convert_js_args_to_python_args,
    date,
    datetime,
    file_type,
    none_type,
    validate_get_composed_info,
    OpenApiModel
)
from bandwidth.exceptions import ApiAttributeError


def lazy_import():
    from bandwidth.model.callback_method_enum import CallbackMethodEnum
    from bandwidth.model.machine_detection_configuration import MachineDetectionConfiguration
    globals()['CallbackMethodEnum'] = CallbackMethodEnum
    globals()['MachineDetectionConfiguration'] = MachineDetectionConfiguration


class CreateCall(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
      allowed_values (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          with a capitalized key describing the allowed value and an allowed
          value. These dicts store the allowed enum values.
      attribute_map (dict): The key is attribute name
          and the value is json key in definition.
      discriminator_value_class_map (dict): A dict to go from the discriminator
          variable value to the discriminator class name.
      validations (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          that stores validations for max_length, min_length, max_items,
          min_items, exclusive_maximum, inclusive_maximum, exclusive_minimum,
          inclusive_minimum, and regex.
      additional_properties_type (tuple): A tuple of classes accepted
          as additional properties values.
    """

    allowed_values = {
    }

    validations = {
        ('answer_url',): {
            'max_length': 2048,
        },
        ('username',): {
            'max_length': 1024,
        },
        ('password',): {
            'max_length': 1024,
        },
        ('answer_fallback_url',): {
            'max_length': 2048,
        },
        ('fallback_username',): {
            'max_length': 1024,
        },
        ('fallback_password',): {
            'max_length': 1024,
        },
        ('disconnect_url',): {
            'max_length': 2048,
        },
        ('call_timeout',): {
            'inclusive_maximum': 300,
            'inclusive_minimum': 1,
        },
        ('callback_timeout',): {
            'inclusive_maximum': 25,
            'inclusive_minimum': 1,
        },
        ('priority',): {
            'inclusive_maximum': 5,
            'inclusive_minimum': 1,
        },
        ('tag',): {
        },
    }

    @cached_property
    def additional_properties_type():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded
        """
        lazy_import()
        return (bool, date, datetime, dict, float, int, list, str, none_type,)  # noqa: E501

    _nullable = False

    @cached_property
    def openapi_types():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded

        Returns
            openapi_types (dict): The key is attribute name
                and the value is attribute type.
        """
        lazy_import()
        return {
            'to': (str,),  # noqa: E501
            '_from': (str,),  # noqa: E501
            'application_id': (str,),  # noqa: E501
            'answer_url': (str,),  # noqa: E501
            'uui': (str, none_type,),  # noqa: E501
            'answer_method': (CallbackMethodEnum,),  # noqa: E501
            'username': (str, none_type,),  # noqa: E501
            'password': (str, none_type,),  # noqa: E501
            'answer_fallback_url': (str, none_type,),  # noqa: E501
            'answer_fallback_method': (CallbackMethodEnum,),  # noqa: E501
            'fallback_username': (str, none_type,),  # noqa: E501
            'fallback_password': (str, none_type,),  # noqa: E501
            'disconnect_url': (str, none_type,),  # noqa: E501
            'disconnect_method': (CallbackMethodEnum,),  # noqa: E501
            'call_timeout': (float, none_type,),  # noqa: E501
            'callback_timeout': (float, none_type,),  # noqa: E501
            'machine_detection': (MachineDetectionConfiguration,),  # noqa: E501
            'priority': (int, none_type,),  # noqa: E501
            'tag': (str, none_type,),  # noqa: E501
        }

    @cached_property
    def discriminator():
        return None


    attribute_map = {
        'to': 'to',  # noqa: E501
        '_from': 'from',  # noqa: E501
        'application_id': 'applicationId',  # noqa: E501
        'answer_url': 'answerUrl',  # noqa: E501
        'uui': 'uui',  # noqa: E501
        'answer_method': 'answerMethod',  # noqa: E501
        'username': 'username',  # noqa: E501
        'password': 'password',  # noqa: E501
        'answer_fallback_url': 'answerFallbackUrl',  # noqa: E501
        'answer_fallback_method': 'answerFallbackMethod',  # noqa: E501
        'fallback_username': 'fallbackUsername',  # noqa: E501
        'fallback_password': 'fallbackPassword',  # noqa: E501
        'disconnect_url': 'disconnectUrl',  # noqa: E501
        'disconnect_method': 'disconnectMethod',  # noqa: E501
        'call_timeout': 'callTimeout',  # noqa: E501
        'callback_timeout': 'callbackTimeout',  # noqa: E501
        'machine_detection': 'machineDetection',  # noqa: E501
        'priority': 'priority',  # noqa: E501
        'tag': 'tag',  # noqa: E501
    }

    read_only_vars = {
    }

    _composed_schemas = {}

    @classmethod
    @convert_js_args_to_python_args
    def _from_openapi_data(cls, to, _from, application_id, answer_url, *args, **kwargs):  # noqa: E501
        """CreateCall - a model defined in OpenAPI

        Args:
            to (str): The destination to call (must be an E.164 formatted number (e.g. `+15555551212`) or a SIP URI (e.g. `sip:user@server.com`)).
            _from (str): A Bandwidth phone number on your account the call should come from (must be in E.164 format, like `+15555551212`, or be one of the following strings: `Restricted`, `Anonymous`, `Private`, or `Unavailable`).
            application_id (str): The id of the application associated with the `from` number.
            answer_url (str): The full URL to send the <a href='/docs/voice/webhooks/answer'>Answer</a> event to when the called party answers. This endpoint should return the first <a href='/docs/voice/bxml'>BXML document</a> to be executed in the call.  Must use `https` if specifying `username` and `password`

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            uui (str, none_type): A comma-separated list of 'User-To-User' headers to be sent in the INVITE when calling a SIP URI. Each value must end with an 'encoding' parameter as described in <a href='https://tools.ietf.org/html/rfc7433'>RFC 7433</a>. Only 'jwt' and 'base64' encodings are allowed. The entire value cannot exceed 350 characters, including parameters and separators.. [optional]  # noqa: E501
            answer_method (CallbackMethodEnum): [optional]  # noqa: E501
            username (str, none_type): Basic auth username.. [optional]  # noqa: E501
            password (str, none_type): Basic auth password.. [optional]  # noqa: E501
            answer_fallback_url (str, none_type): A fallback url which, if provided, will be used to retry the `answer` webhook delivery in case `answerUrl` fails to respond  Must use `https` if specifying `fallbackUsername` and `fallbackPassword`. [optional]  # noqa: E501
            answer_fallback_method (CallbackMethodEnum): [optional]  # noqa: E501
            fallback_username (str, none_type): Basic auth username.. [optional]  # noqa: E501
            fallback_password (str, none_type): Basic auth password.. [optional]  # noqa: E501
            disconnect_url (str, none_type): The URL to send the <a href='/docs/voice/webhooks/disconnect'>Disconnect</a> event to when the call ends. This event does not expect a BXML response.. [optional]  # noqa: E501
            disconnect_method (CallbackMethodEnum): [optional]  # noqa: E501
            call_timeout (float, none_type): The timeout (in seconds) for the callee to answer the call after it starts ringing. If the call does not start ringing within 30s, the call will be cancelled regardless of this value.  Can be any numeric value (including decimals) between 1 and 300.. [optional] if omitted the server will use the default value of 30  # noqa: E501
            callback_timeout (float, none_type): This is the timeout (in seconds) to use when delivering webhooks for the call. Can be any numeric value (including decimals) between 1 and 25.. [optional] if omitted the server will use the default value of 15  # noqa: E501
            machine_detection (MachineDetectionConfiguration): [optional]  # noqa: E501
            priority (int, none_type): The priority of this call over other calls from your account. For example, if during a call your application needs to place a new call and bridge it with the current call, you might want to create the call with priority 1 so that it will be the next call picked off your queue, ahead of other less time sensitive calls. A lower value means higher priority, so a priority 1 call takes precedence over a priority 2 call.. [optional] if omitted the server will use the default value of 5  # noqa: E501
            tag (str, none_type): A custom string that will be sent with all webhooks for this call unless overwritten by a future <a href='/docs/voice/bxml/tag'>`<Tag>`</a> verb or `tag` attribute on another verb, or cleared.  May be cleared by setting `tag=\"\"`  Max length 256 characters.. [optional]  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', True)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        self = super(OpenApiModel, cls).__new__(cls)

        if args:
            for arg in args:
                if isinstance(arg, dict):
                    kwargs.update(arg)
                else:
                    raise ApiTypeError(
                        "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                            args,
                            self.__class__.__name__,
                        ),
                        path_to_item=_path_to_item,
                        valid_classes=(self.__class__,),
                    )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        self.to = to
        self._from = _from
        self.application_id = application_id
        self.answer_url = answer_url
        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
        return self

    required_properties = set([
        '_data_store',
        '_check_type',
        '_spec_property_naming',
        '_path_to_item',
        '_configuration',
        '_visited_composed_classes',
    ])

    @convert_js_args_to_python_args
    def __init__(self, to, _from, application_id, answer_url, *args, **kwargs):  # noqa: E501
        """CreateCall - a model defined in OpenAPI

        Args:
            to (str): The destination to call (must be an E.164 formatted number (e.g. `+15555551212`) or a SIP URI (e.g. `sip:user@server.com`)).
            _from (str): A Bandwidth phone number on your account the call should come from (must be in E.164 format, like `+15555551212`, or be one of the following strings: `Restricted`, `Anonymous`, `Private`, or `Unavailable`).
            application_id (str): The id of the application associated with the `from` number.
            answer_url (str): The full URL to send the <a href='/docs/voice/webhooks/answer'>Answer</a> event to when the called party answers. This endpoint should return the first <a href='/docs/voice/bxml'>BXML document</a> to be executed in the call.  Must use `https` if specifying `username` and `password`

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            uui (str, none_type): A comma-separated list of 'User-To-User' headers to be sent in the INVITE when calling a SIP URI. Each value must end with an 'encoding' parameter as described in <a href='https://tools.ietf.org/html/rfc7433'>RFC 7433</a>. Only 'jwt' and 'base64' encodings are allowed. The entire value cannot exceed 350 characters, including parameters and separators.. [optional]  # noqa: E501
            answer_method (CallbackMethodEnum): [optional]  # noqa: E501
            username (str, none_type): Basic auth username.. [optional]  # noqa: E501
            password (str, none_type): Basic auth password.. [optional]  # noqa: E501
            answer_fallback_url (str, none_type): A fallback url which, if provided, will be used to retry the `answer` webhook delivery in case `answerUrl` fails to respond  Must use `https` if specifying `fallbackUsername` and `fallbackPassword`. [optional]  # noqa: E501
            answer_fallback_method (CallbackMethodEnum): [optional]  # noqa: E501
            fallback_username (str, none_type): Basic auth username.. [optional]  # noqa: E501
            fallback_password (str, none_type): Basic auth password.. [optional]  # noqa: E501
            disconnect_url (str, none_type): The URL to send the <a href='/docs/voice/webhooks/disconnect'>Disconnect</a> event to when the call ends. This event does not expect a BXML response.. [optional]  # noqa: E501
            disconnect_method (CallbackMethodEnum): [optional]  # noqa: E501
            call_timeout (float, none_type): The timeout (in seconds) for the callee to answer the call after it starts ringing. If the call does not start ringing within 30s, the call will be cancelled regardless of this value.  Can be any numeric value (including decimals) between 1 and 300.. [optional] if omitted the server will use the default value of 30  # noqa: E501
            callback_timeout (float, none_type): This is the timeout (in seconds) to use when delivering webhooks for the call. Can be any numeric value (including decimals) between 1 and 25.. [optional] if omitted the server will use the default value of 15  # noqa: E501
            machine_detection (MachineDetectionConfiguration): [optional]  # noqa: E501
            priority (int, none_type): The priority of this call over other calls from your account. For example, if during a call your application needs to place a new call and bridge it with the current call, you might want to create the call with priority 1 so that it will be the next call picked off your queue, ahead of other less time sensitive calls. A lower value means higher priority, so a priority 1 call takes precedence over a priority 2 call.. [optional] if omitted the server will use the default value of 5  # noqa: E501
            tag (str, none_type): A custom string that will be sent with all webhooks for this call unless overwritten by a future <a href='/docs/voice/bxml/tag'>`<Tag>`</a> verb or `tag` attribute on another verb, or cleared.  May be cleared by setting `tag=\"\"`  Max length 256 characters.. [optional]  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        if args:
            for arg in args:
                if isinstance(arg, dict):
                    kwargs.update(arg)
                else:
                    raise ApiTypeError(
                        "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                            args,
                            self.__class__.__name__,
                        ),
                        path_to_item=_path_to_item,
                        valid_classes=(self.__class__,),
                    )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        self.to = to
        self._from = _from
        self.application_id = application_id
        self.answer_url = answer_url
        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
            if var_name in self.read_only_vars:
                raise ApiAttributeError(f"`{var_name}` is a read-only attribute. Use `from_openapi_data` to instantiate "
                                     f"class with read only attributes.")
