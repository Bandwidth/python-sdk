# -*- coding: utf-8 -*-

"""
bandwidth

This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class TwoFactorCodeRequestSchema(object):

    """Implementation of the 'TwoFactorCodeRequestSchema' model.

    TODO: type model description here.

    Attributes:
        to (string): TODO: type description here.
        mfrom (string): TODO: type description here.
        application_id (string): TODO: type description here.
        scope (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "to": 'to',
        "mfrom": 'from',
        "application_id": 'applicationId',
        "scope": 'scope'
    }

    def __init__(self,
                 to=None,
                 mfrom=None,
                 application_id=None,
                 scope=None):
        """Constructor for the TwoFactorCodeRequestSchema class"""

        # Initialize members of the class
        self.to = to
        self.mfrom = mfrom
        self.application_id = application_id
        self.scope = scope

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        to = dictionary.get('to')
        mfrom = dictionary.get('from')
        application_id = dictionary.get('applicationId')
        scope = dictionary.get('scope')

        # Return an object of this model
        return cls(to,
                   mfrom,
                   application_id,
                   scope)
