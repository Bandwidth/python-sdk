"""
    Bandwidth

    Bandwidth's Communication APIs  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: letstalk@bandwidth.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from bandwidth.api_client import ApiClient, Endpoint as _Endpoint
from bandwidth.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from bandwidth.model.api_error import ApiError
from bandwidth.model.call_state import CallState
from bandwidth.model.create_call_request import CreateCallRequest
from bandwidth.model.create_call_response import CreateCallResponse
from bandwidth.model.modify_call_request import ModifyCallRequest


class CallsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.create_call_endpoint = _Endpoint(
            settings={
                'response_type': (CreateCallResponse,),
                'auth': [
                    'httpBasic'
                ],
                'endpoint_path': '/api/v2/accounts/{accountId}/calls',
                'operation_id': 'create_call',
                'http_method': 'POST',
                'servers': [
                    {
                        'url': "https://voice.bandwidth.com",
                        'description': "No description provided",
                    },
                ]
            },
            params_map={
                'all': [
                    'account_id',
                    'create_call_request',
                ],
                'required': [
                    'account_id',
                    'create_call_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'account_id':
                        (str,),
                    'create_call_request':
                        (CreateCallRequest,),
                },
                'attribute_map': {
                    'account_id': 'accountId',
                },
                'location_map': {
                    'account_id': 'path',
                    'create_call_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.get_call_endpoint = _Endpoint(
            settings={
                'response_type': (CallState,),
                'auth': [
                    'httpBasic'
                ],
                'endpoint_path': '/api/v2/accounts/{accountId}/calls/{callId}',
                'operation_id': 'get_call',
                'http_method': 'GET',
                'servers': [
                    {
                        'url': "https://voice.bandwidth.com",
                        'description': "No description provided",
                    },
                ]
            },
            params_map={
                'all': [
                    'account_id',
                    'call_id',
                ],
                'required': [
                    'account_id',
                    'call_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'account_id':
                        (str,),
                    'call_id':
                        (str,),
                },
                'attribute_map': {
                    'account_id': 'accountId',
                    'call_id': 'callId',
                },
                'location_map': {
                    'account_id': 'path',
                    'call_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.modify_call_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'httpBasic'
                ],
                'endpoint_path': '/api/v2/accounts/{accountId}/calls/{callId}',
                'operation_id': 'modify_call',
                'http_method': 'POST',
                'servers': [
                    {
                        'url': "https://voice.bandwidth.com",
                        'description': "No description provided",
                    },
                ]
            },
            params_map={
                'all': [
                    'account_id',
                    'call_id',
                    'modify_call_request',
                ],
                'required': [
                    'account_id',
                    'call_id',
                    'modify_call_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'account_id':
                        (str,),
                    'call_id':
                        (str,),
                    'modify_call_request':
                        (ModifyCallRequest,),
                },
                'attribute_map': {
                    'account_id': 'accountId',
                    'call_id': 'callId',
                },
                'location_map': {
                    'account_id': 'path',
                    'call_id': 'path',
                    'modify_call_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def create_call(
        self,
        account_id,
        create_call_request,
        **kwargs
    ):
        """Create Call  # noqa: E501

        Creates an outbound phone call.  Calls are created immediately unless your account has outbound call queueing enabled. When enabled, your outbound calls will be queued and initiated at a specific dequeueing rate, enabling your application to \"fire and forget\" when creating calls. Queued calls may not be modified until they are dequeued and placed, but may be removed from your queue on demand.  To enable call queueing on your account, contact our Account Management team.  <b>Please note: </b> Calls submitted to your queue will be placed aproximately in order, but exact ordering is not guaranteed.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.create_call(account_id, create_call_request, async_req=True)
        >>> result = thread.get()

        Args:
            account_id (str):
            create_call_request (CreateCallRequest):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CreateCallResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['account_id'] = \
            account_id
        kwargs['create_call_request'] = \
            create_call_request
        return self.create_call_endpoint.call_with_http_info(**kwargs)

    def get_call(
        self,
        account_id,
        call_id,
        **kwargs
    ):
        """Get Call Information  # noqa: E501

        Retrieve the current state of a specific call. This information is near-realtime, so it may take a few minutes for your call to be accessible using this endpoint.<br><br>**Note**: Call information is kept for 7 days after the calls are hung up. If you attempt to retrieve information for a call that is older than 7 days, you will get an HTTP 404 response.  The `disconnectCause` for a call can be: - `hangup`: one party hung up the call, a [`<Hangup>`](../../bxml/verbs/hangup.md) verb was executed, or there was no more BXML to execute; it indicates that the call ended normally. - `busy`: the callee was busy. - `timeout`: the call wasn't answered before the `callTimeout` was reached. - `cancel`: the call was cancelled by its originator while it was ringing. - `rejected`: the call was rejected by the callee. - `callback-error`: a BXML callback couldn't be delivered to your callback server. - `invalid-bxml`: invalid BXML was returned in response to a callback. - `application-error`: an unsupported action was tried on the call, e.g. trying to play a .ogg audio. - `account-limit`: the account rate limits were reached. - `node-capacity-exceeded`: the system maximum capacity was reached. - `error`: some error not described in any of the other causes happened on the call. - `unknown`: some unknown error happened on the call.  Note: this list is not exhaustive and other values can appear in the future.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_call(account_id, call_id, async_req=True)
        >>> result = thread.get()

        Args:
            account_id (str):
            call_id (str):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CallState
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['account_id'] = \
            account_id
        kwargs['call_id'] = \
            call_id
        return self.get_call_endpoint.call_with_http_info(**kwargs)

    def modify_call(
        self,
        account_id,
        call_id,
        modify_call_request,
        **kwargs
    ):
        """Modify Call  # noqa: E501

        Interrupts and replaces an active call's BXML document or hangs up the call  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.modify_call(account_id, call_id, modify_call_request, async_req=True)
        >>> result = thread.get()

        Args:
            account_id (str):
            call_id (str):
            modify_call_request (ModifyCallRequest):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['account_id'] = \
            account_id
        kwargs['call_id'] = \
            call_id
        kwargs['modify_call_request'] = \
            modify_call_request
        return self.modify_call_endpoint.call_with_http_info(**kwargs)

