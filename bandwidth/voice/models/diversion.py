# -*- coding: utf-8 -*-

"""
bandwidth

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Diversion(object):

    """Implementation of the 'Diversion' model.

    TODO: type model description here.

    Attributes:
        reason (string): TODO: type description here.
        privacy (string): TODO: type description here.
        unknown (string): TODO: type description here.
        orig_to (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "reason": 'reason',
        "privacy": 'privacy',
        "unknown": 'unknown',
        "orig_to": 'origTo'
    }

    def __init__(self,
                 reason=None,
                 privacy=None,
                 unknown=None,
                 orig_to=None):
        """Constructor for the Diversion class"""

        # Initialize members of the class
        self.reason = reason
        self.privacy = privacy
        self.unknown = unknown
        self.orig_to = orig_to

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        reason = dictionary.get('reason')
        privacy = dictionary.get('privacy')
        unknown = dictionary.get('unknown')
        orig_to = dictionary.get('origTo')

        # Return an object of this model
        return cls(reason,
                   privacy,
                   unknown,
                   orig_to)
