# -*- coding: utf-8 -*-

"""
bandwidth

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Result(object):

    """Implementation of the 'Result' model.

    TODO: type model description here.

    Attributes:
        response_code (int): Our vendor's response code.
        message (string): Message associated with the response code.
        e_164_format (string): The telephone number in E.164 format.
        formatted (string): The formatted version of the telephone number.
        country (string): The country of the telephone number.
        line_type (string): The line type of the telephone number.
        line_provider (string): The service provider of the telephone number.
        mobile_country_code (string): The first half of the Home Network
            Identity (HNI).
        mobile_network_code (string): The second half of the HNI.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "response_code": 'Response Code',
        "message": 'Message',
        "e_164_format": 'E.164 Format',
        "formatted": 'Formatted',
        "country": 'Country',
        "line_type": 'Line Type',
        "line_provider": 'Line Provider',
        "mobile_country_code": 'Mobile Country Code',
        "mobile_network_code": 'Mobile Network Code'
    }

    def __init__(self,
                 response_code=None,
                 message=None,
                 e_164_format=None,
                 formatted=None,
                 country=None,
                 line_type=None,
                 line_provider=None,
                 mobile_country_code=None,
                 mobile_network_code=None):
        """Constructor for the Result class"""

        # Initialize members of the class
        self.response_code = response_code
        self.message = message
        self.e_164_format = e_164_format
        self.formatted = formatted
        self.country = country
        self.line_type = line_type
        self.line_provider = line_provider
        self.mobile_country_code = mobile_country_code
        self.mobile_network_code = mobile_network_code

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        response_code = dictionary.get('Response Code')
        message = dictionary.get('Message')
        e_164_format = dictionary.get('E.164 Format')
        formatted = dictionary.get('Formatted')
        country = dictionary.get('Country')
        line_type = dictionary.get('Line Type')
        line_provider = dictionary.get('Line Provider')
        mobile_country_code = dictionary.get('Mobile Country Code')
        mobile_network_code = dictionary.get('Mobile Network Code')

        # Return an object of this model
        return cls(response_code,
                   message,
                   e_164_format,
                   formatted,
                   country,
                   line_type,
                   line_provider,
                   mobile_country_code,
                   mobile_network_code)
