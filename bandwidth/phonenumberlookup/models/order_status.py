# -*- coding: utf-8 -*-

"""
bandwidth

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from bandwidth.phonenumberlookup.models.result import Result


class OrderStatus(object):

    """Implementation of the 'OrderStatus' model.

    If requestId exists, the result for that request is returned. See the
    Examples for details on the various responses that you can receive. 
    Generally, if you see a Response Code of 0 in a result for a TN,
    information will be available for it.  Any other Response Code will
    indicate no information was available for the TN.

    Attributes:
        request_id (string): The requestId.
        status (string): The status of the request (IN_PROGRESS, COMPLETE,
            PARTIAL_COMPLETE, or FAILED).
        failed_telephone_numbers (list of string): The telephone numbers whose
            lookup failed
        result (list of Result): The carrier information results for the
            specified telephone number.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "request_id": 'requestId',
        "status": 'status',
        "failed_telephone_numbers": 'failedTelephoneNumbers',
        "result": 'result'
    }

    def __init__(self,
                 request_id=None,
                 status=None,
                 failed_telephone_numbers=None,
                 result=None):
        """Constructor for the OrderStatus class"""

        # Initialize members of the class
        self.request_id = request_id
        self.status = status
        self.failed_telephone_numbers = failed_telephone_numbers
        self.result = result

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        request_id = dictionary.get('requestId')
        status = dictionary.get('status')
        failed_telephone_numbers = dictionary.get('failedTelephoneNumbers')
        result = None
        if dictionary.get('result') is not None:
            result = [Result.from_dictionary(x) for x in dictionary.get('result')]

        # Return an object of this model
        return cls(request_id,
                   status,
                   failed_telephone_numbers,
                   result)
