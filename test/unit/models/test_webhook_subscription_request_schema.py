# coding: utf-8

"""
    Bandwidth

    Bandwidth's Communication APIs

    The version of the OpenAPI document: 1.0.0
    Contact: letstalk@bandwidth.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bandwidth.models.webhook_subscription_request_schema import WebhookSubscriptionRequestSchema
from bandwidth.models.tfv_basic_authentication import TfvBasicAuthentication

class TestWebhookSubscriptionRequestSchema(unittest.TestCase):
    """WebhookSubscriptionRequestSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookSubscriptionRequestSchema:
        """Test WebhookSubscriptionRequestSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        if include_optional:
            return WebhookSubscriptionRequestSchema(
                basic_authentication = TfvBasicAuthentication(
                    username = 'username', 
                    password = 'password', ),
                callback_url = 'https://www.example.com/path/to/resource',
                shared_secret_key = 'This is my $3cret'
            )
        else:
            return WebhookSubscriptionRequestSchema(
                callback_url = 'https://www.example.com/path/to/resource',
        )

    def testWebhookSubscriptionRequestSchema(self):
        """Test WebhookSubscriptionRequestSchema"""
        instance = self.make_instance(True)
        assert instance is not None
        assert isinstance(instance, WebhookSubscriptionRequestSchema)
        assert instance.basic_authentication.username == 'username'
        assert instance.basic_authentication.password == 'password'
        assert instance.callback_url == 'https://www.example.com/path/to/resource'
        assert instance.shared_secret_key == 'This is my $3cret'

if __name__ == '__main__':
    unittest.main()
