# coding: utf-8

"""
    Bandwidth

    Bandwidth's Communication APIs

    The version of the OpenAPI document: 1.0.0
    Contact: letstalk@bandwidth.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
from datetime import datetime

from bandwidth.models.multi_channel_action_calendar_event import MultiChannelActionCalendarEvent

class TestMultiChannelActionCalendarEvent(unittest.TestCase):
    """MultiChannelActionCalendarEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MultiChannelActionCalendarEvent:
        """Test MultiChannelActionCalendarEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        if include_optional:
            return MultiChannelActionCalendarEvent(
                type = 'REPLY',
                text = 'Hello world',
                post_back_data = 'U0dWc2JHOGdkMjl5YkdRPQ==',
                title = 'Meeting with John',
                start_time = '2022-09-14T18:20:16Z',
                end_time = '2022-09-14T18:20:16Z',
                description = 'Discuss the new project'
            )
        else:
            return MultiChannelActionCalendarEvent(
                type = 'REPLY',
                text = 'Hello world',
                post_back_data = 'U0dWc2JHOGdkMjl5YkdRPQ==',
                title = 'Meeting with John',
                start_time = '2022-09-14T18:20:16Z',
                end_time = '2022-09-14T18:20:16Z',
        )

    def testMultiChannelActionCalendarEvent(self):
        """Test MultiChannelActionCalendarEvent"""
        instance = self.make_instance(True)
        assert instance is not None
        assert isinstance(instance, MultiChannelActionCalendarEvent)
        assert instance.type == 'REPLY'
        assert instance.text == 'Hello world'
        assert instance.post_back_data == 'U0dWc2JHOGdkMjl5YkdRPQ=='
        assert instance.title == 'Meeting with John'
        assert isinstance(instance.start_time, datetime)
        assert isinstance(instance.end_time, datetime)

if __name__ == '__main__':
    unittest.main()
