# coding: utf-8

"""
    Bandwidth

    Bandwidth's Communication APIs

    The version of the OpenAPI document: 1.0.0
    Contact: letstalk@bandwidth.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
from datetime import datetime

from bandwidth.models.multi_channel_callback_data import MultiChannelCallbackData
from bandwidth.models.multi_channel_message_callback_data import MultiChannelMessageCallbackData

class TestMultiChannelCallbackData(unittest.TestCase):
    """MultiChannelCallbackData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MultiChannelCallbackData:
        """Test MultiChannelCallbackData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        if include_optional:
            return MultiChannelCallbackData(
                time = '2025-01-01T18:20:16Z',
                type = 'DELIVERED',
                to = '+15552223333',
                description = 'Incoming message received',
                message = MultiChannelMessageCallbackData(
                    message_id = '1589228074636lm4k2je7j7jklbn2', 
                    status = 'DELIVERED', 
                    direction = 'OUTBOUND', 
                    var_from = 'BandwidthRBM', 
                    to = '+15552223333', 
                    application_id = '93de2206-9669-4e07-948d-329f4b722ee2', 
                    channel = 'RBM', 
                    tag = 'custom string', )
            )
        else:
            return MultiChannelCallbackData(
        )

    def testMultiChannelCallbackData(self):
        """Test MultiChannelCallbackData"""
        instance = self.make_instance(True)
        assert instance is not None
        assert isinstance(instance, MultiChannelCallbackData)
        assert isinstance(instance.message, MultiChannelMessageCallbackData)
        assert isinstance(instance.time, datetime)
        assert instance.type == 'DELIVERED'
        assert instance.to == '+15552223333'
        assert instance.description == 'Incoming message received'
        assert instance.message.message_id == '1589228074636lm4k2je7j7jklbn2'
        assert instance.message.status == 'DELIVERED'
        assert instance.message.direction == 'OUTBOUND'
        assert instance.message.var_from == 'BandwidthRBM'
        assert instance.message.to == '+15552223333'
        assert instance.message.application_id == '93de2206-9669-4e07-948d-329f4b722ee2'
        assert instance.message.channel == 'RBM'
        assert instance.message.tag == 'custom string'

if __name__ == '__main__':
    unittest.main()
