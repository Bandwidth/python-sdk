# coding: utf-8

"""
    Bandwidth

    Bandwidth's Communication APIs

    The version of the OpenAPI document: 1.0.0
    Contact: letstalk@bandwidth.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bandwidth.models.multi_channel_channel_list_object import MultiChannelChannelListObject
from bandwidth.models.rbm_message_content_text import RbmMessageContentText
from bandwidth.models.multi_channel_channel_list_object_content import MultiChannelChannelListObjectContent

class TestMultiChannelChannelListObject(unittest.TestCase):
    """MultiChannelChannelListObject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MultiChannelChannelListObject:
        """Test MultiChannelChannelListObject
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        if include_optional:
            return MultiChannelChannelListObject(
                var_from = 'BandwidthRBM',
                application_id = '93de2206-9669-4e07-948d-329f4b722ee2',
                channel = 'RBM',
                content = MultiChannelChannelListObjectContent(
                    RbmMessageContentText(
                        text = 'Hello',
                    )
                )
            )
        else:
            return MultiChannelChannelListObject(
                var_from = 'BandwidthRBM',
                application_id = '93de2206-9669-4e07-948d-329f4b722ee2',
                channel = 'RBM',
                content = None,
        )

    def testMultiChannelChannelListObject(self):
        """Test MultiChannelChannelListObject"""
        instance = self.make_instance(True)
        assert instance is not None
        assert isinstance(instance, MultiChannelChannelListObject)
        assert instance.var_from == 'BandwidthRBM'
        assert instance.application_id == '93de2206-9669-4e07-948d-329f4b722ee2'
        assert instance.channel == 'RBM'
        assert isinstance(instance.content, MultiChannelChannelListObjectContent)

if __name__ == '__main__':
    unittest.main()
