# coding: utf-8

"""
    Bandwidth

    Bandwidth's Communication APIs

    The version of the OpenAPI document: 1.0.0
    Contact: letstalk@bandwidth.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bandwidth.models.machine_detection_configuration import MachineDetectionConfiguration

class TestMachineDetectionConfiguration(unittest.TestCase):
    """MachineDetectionConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MachineDetectionConfiguration:
        """Test MachineDetectionConfiguration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        if include_optional:
            return MachineDetectionConfiguration(
                mode = 'async',
                detection_timeout = 15,
                silence_timeout = 10,
                speech_threshold = 10,
                speech_end_threshold = 5,
                machine_speech_end_threshold = 5,
                delay_result = False,
                callback_url = 'https://myServer.example/bandwidth/webhooks/machineDetectionComplete',
                callback_method = 'POST',
                username = 'mySecretUsername',
                password = 'mySecretPassword1!',
                fallback_url = 'https://myFallbackServer.example/bandwidth/webhooks/machineDetectionComplete',
                fallback_method = 'POST',
                fallback_username = 'mySecretUsername',
                fallback_password = 'mySecretPassword1!'
            )
        else:
            return MachineDetectionConfiguration(
        )

    def testMachineDetectionConfiguration(self):
        """Test MachineDetectionConfiguration"""
        instance = self.make_instance(True)
        assert instance is not None
        assert isinstance(instance, MachineDetectionConfiguration)
        assert instance.mode == 'async'
        assert instance.detection_timeout == 15
        assert instance.silence_timeout == 10
        assert instance.speech_threshold == 10
        assert instance.speech_end_threshold == 5
        assert instance.machine_speech_end_threshold == 5
        assert instance.delay_result == False
        assert instance.callback_url == 'https://myServer.example/bandwidth/webhooks/machineDetectionComplete'
        assert instance.callback_method == 'POST'
        assert instance.username == 'mySecretUsername'
        assert instance.password == 'mySecretPassword1!'
        assert instance.fallback_url == 'https://myFallbackServer.example/bandwidth/webhooks/machineDetectionComplete'
        assert instance.fallback_method == 'POST'
        assert instance.fallback_username == 'mySecretUsername'
        assert instance.fallback_password == 'mySecretPassword1!'

if __name__ == '__main__':
    unittest.main()
