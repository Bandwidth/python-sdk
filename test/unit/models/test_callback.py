# coding: utf-8

"""
    Bandwidth

    Bandwidth's Communication APIs

    The version of the OpenAPI document: 1.0.0
    Contact: letstalk@bandwidth.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bandwidth.models.callback import Callback
from bandwidth.models.inbound_callback import InboundCallback
from bandwidth.models.inbound_callback_message import InboundCallbackMessage
from bandwidth.models.status_callback import StatusCallback
from bandwidth.models.status_callback_message import StatusCallbackMessage

class TestCallback(unittest.TestCase):
    """Callback unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Callback:
        """Test Callback
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """        

    def testCallback(self):
        """Test Callback"""
        inbound_callback = Callback(InboundCallback(
            time = '2024-12-02T20:15:57.278Z',
            type = 'message-received',
            to = '+15552223333',
            description = 'Incoming message received',
            message = InboundCallbackMessage(
                id = '1661365814859loidf7mcwd4qacn7',
                owner = '+15553332222',
                application_id = '93de2206-9669-4e07-948d-329f4b722ee2',
                time = '2024-12-02T20:15:57.666Z',
                segment_count = 1,
                direction = 'in',
                to = ['+15552223333'],
                var_from = '+15553332222',
            ),
            carrier_name = 'AT&T'
        ))
        status_callback = Callback(StatusCallback(
            time = '2024-12-02T20:15:57.278Z',
            event_time = '2024-12-02T20:15:58.278Z',
            type = 'message-delivered',
            to = '+15552223333',
            description = 'Message delivered to carrier.',
            message = StatusCallbackMessage(
                id = '1661365814859loidf7mcwd4qacn7', 
                owner = '+15553332222', 
                application_id = '93de2206-9669-4e07-948d-329f4b722ee2', 
                time = '2024-12-02T20:15:57.666Z', 
                segment_count = 1, 
                direction = 'in', 
                to = ["+15552223333"], 
                var_from = '+15553332222', 
                text = 'Hello world', 
                tag = 'custom string', 
                media = ["https://dev.bandwidth.com/images/bandwidth-logo.png","https://dev.bandwidth.com/images/github_logo.png"], 
                priority = 'default', 
                channel = 'RBM', ),
            error_code = 4405,
            carrier_name = 'AT&T'
        ))

        assert inbound_callback is not None
        assert isinstance(inbound_callback, Callback)
        assert isinstance(inbound_callback.actual_instance, InboundCallback)
        assert status_callback is not None
        assert isinstance(status_callback, Callback)
        assert isinstance(status_callback.actual_instance, StatusCallback)


if __name__ == '__main__':
    unittest.main()
