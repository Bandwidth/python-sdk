# coding: utf-8

"""
    Bandwidth

    Bandwidth's Communication APIs

    The version of the OpenAPI document: 1.0.0
    Contact: letstalk@bandwidth.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bandwidth.models.create_call import CreateCall
from bandwidth.models.machine_detection_configuration import MachineDetectionConfiguration

class TestCreateCall(unittest.TestCase):
    """CreateCall unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateCall:
        """Test CreateCall
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        if include_optional:
            return CreateCall(
                to = '+19195551234',
                var_from = '+15555551212',
                privacy = False,
                display_name = 'John Doe',
                uui = 'eyJhbGciOiJIUzI1NiJ9.WyJoaSJd.-znkjYyCkgz4djmHUPSXl9YrJ6Nix_XvmlwKGFh5ERM;encoding=jwt,aGVsbG8gd29ybGQ;encoding=base64',
                application_id = '1234-qwer-5679-tyui',
                answer_url = 'https://www.myCallbackServer.example/webhooks/answer',
                answer_method = 'POST',
                username = 'mySecretUsername',
                password = 'mySecretPassword1!',
                answer_fallback_url = 'https://www.myFallbackServer.example/webhooks/answer',
                answer_fallback_method = 'POST',
                fallback_username = 'mySecretUsername',
                fallback_password = 'mySecretPassword1!',
                disconnect_url = 'https://www.myCallbackServer.example/webhooks/disconnect',
                disconnect_method = 'POST',
                call_timeout = 30,
                callback_timeout = 15,
                machine_detection = MachineDetectionConfiguration(
                    mode = 'async', 
                    detection_timeout = 15, 
                    silence_timeout = 10, 
                    speech_threshold = 10, 
                    speech_end_threshold = 5, 
                    machine_speech_end_threshold = 5, 
                    delay_result = False, 
                    callback_url = 'https://myServer.example/bandwidth/webhooks/machineDetectionComplete', 
                    callback_method = 'POST', 
                    username = 'mySecretUsername', 
                    password = 'mySecretPassword1!', 
                    fallback_url = 'https://myFallbackServer.example/bandwidth/webhooks/machineDetectionComplete', 
                    fallback_method = 'POST', 
                    fallback_username = 'mySecretUsername', 
                    fallback_password = 'mySecretPassword1!', ),
                priority = 5,
                tag = 'arbitrary text here'
            )
        else:
            return CreateCall(
                to = '+19195551234',
                var_from = '+15555551212',
                application_id = '1234-qwer-5679-tyui',
                answer_url = 'https://www.myCallbackServer.example/webhooks/answer',
        )

    def testCreateCall(self):
        """Test CreateCall"""
        instance = self.make_instance(True)
        assert instance is not None
        assert isinstance(instance, CreateCall)
        assert instance.to == '+19195551234'
        assert instance.var_from == '+15555551212'
        assert instance.privacy == False
        assert instance.display_name == 'John Doe'
        assert instance.uui == 'eyJhbGciOiJIUzI1NiJ9.WyJoaSJd.-znkjYyCkgz4djmHUPSXl9YrJ6Nix_XvmlwKGFh5ERM;encoding=jwt,aGVsbG8gd29ybGQ;encoding=base64'
        assert instance.application_id == '1234-qwer-5679-tyui'
        assert instance.answer_url == 'https://www.myCallbackServer.example/webhooks/answer'
        assert instance.answer_method == 'POST'
        assert instance.username == 'mySecretUsername'
        assert instance.password == 'mySecretPassword1!'
        assert instance.answer_fallback_url == 'https://www.myFallbackServer.example/webhooks/answer'
        assert instance.answer_fallback_method == 'POST'
        assert instance.fallback_username == 'mySecretUsername'
        assert instance.fallback_password == 'mySecretPassword1!'
        assert instance.disconnect_url == 'https://www.myCallbackServer.example/webhooks/disconnect'
        assert instance.disconnect_method == 'POST'
        assert instance.call_timeout == 30
        assert instance.callback_timeout == 15
        assert isinstance(instance.machine_detection, MachineDetectionConfiguration)
        assert instance.machine_detection.mode == 'async'
        assert instance.machine_detection.detection_timeout == 15
        assert instance.machine_detection.silence_timeout == 10
        assert instance.machine_detection.speech_threshold == 10
        assert instance.machine_detection.speech_end_threshold == 5
        assert instance.machine_detection.machine_speech_end_threshold == 5
        assert instance.machine_detection.delay_result == False
        assert instance.machine_detection.callback_url == 'https://myServer.example/bandwidth/webhooks/machineDetectionComplete'
        assert instance.machine_detection.callback_method == 'POST'
        assert instance.machine_detection.username == 'mySecretUsername'
        assert instance.machine_detection.password == 'mySecretPassword1!'
        assert instance.machine_detection.fallback_url == 'https://myFallbackServer.example/bandwidth/webhooks/machineDetectionComplete'
        assert instance.machine_detection.fallback_method == 'POST'
        assert instance.machine_detection.fallback_username == 'mySecretUsername'
        assert instance.machine_detection.fallback_password == 'mySecretPassword1!'

if __name__ == '__main__':
    unittest.main()
