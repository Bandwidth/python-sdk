# coding: utf-8

"""
    Bandwidth

    Bandwidth's Communication APIs

    The version of the OpenAPI document: 1.0.0
    Contact: letstalk@bandwidth.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bandwidth.models.rbm_message_media import RbmMessageMedia
from bandwidth.models.rbm_message_content_file import RbmMessageContentFile
from bandwidth.models.multi_channel_action import MultiChannelAction
from bandwidth.models.rbm_action_base import RbmActionBase

class TestRbmMessageMedia(unittest.TestCase):
    """RbmMessageMedia unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RbmMessageMedia:
        """Test RbmMessageMedia
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        if include_optional:
            return RbmMessageMedia(
                media = RbmMessageContentFile(
                    file_url = 'https://dev.bandwidth.com/images/bandwidth-logo.png',
                    thumbnail_url = 'https://dev.bandwidth.com/images/bandwidth-logo.png'
                ),
                suggestions = [
                    MultiChannelAction(
                        RbmActionBase(
                            type = 'REPLY',
                            text = 'Hello world',
                            post_back_data = '[B@32298473'
                        )
                    )
                ]
            )
        else:
            return RbmMessageMedia(
                media = RbmMessageContentFile(
                    file_url = 'https://dev.bandwidth.com/images/bandwidth-logo.png',
                    thumbnail_url = 'https://dev.bandwidth.com/images/bandwidth-logo.png'
                ),
        )

    def testRbmMessageMedia(self):
        """Test RbmMessageMedia"""
        instance = self.make_instance(True)
        assert instance is not None
        assert isinstance(instance, RbmMessageMedia)
        assert instance.media is not None
        assert isinstance(instance.media, RbmMessageContentFile)
        assert instance.suggestions is not None
        assert isinstance(instance.suggestions, list)

if __name__ == '__main__':
    unittest.main()
