# coding: utf-8

"""
    Bandwidth

    Bandwidth's Communication APIs

    The version of the OpenAPI document: 1.0.0
    Contact: letstalk@bandwidth.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
from datetime import datetime

from bandwidth.models.inbound_callback import InboundCallback
from bandwidth.models.inbound_callback_message import InboundCallbackMessage

class TestInboundCallback(unittest.TestCase):
    """InboundCallback unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InboundCallback:
        """Test InboundCallback
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        if include_optional:
            return InboundCallback(
                time = '2024-12-02T20:15:57.278Z',
                type = 'message-received',
                to = '+15552223333',
                description = 'Incoming message received',
                message = InboundCallbackMessage(
                    id = '1661365814859loidf7mcwd4qacn7',
                    owner = '+15553332222',
                    application_id = '93de2206-9669-4e07-948d-329f4b722ee2',
                    time = '2024-12-02T20:15:57.666Z',
                    segment_count = 1,
                    direction = 'in',
                    to = ['+15552223333'],
                    var_from = '+15553332222',
                ),
                carrier_name = 'AT&T'
            )
        else:
            return InboundCallback(
                time = '2024-12-02T20:15:57.278Z',
                type = 'message-received',
                to = '+15552223333',
                description = 'Incoming message received',
                message = None,
        )

    def testInboundCallback(self):
        """Test InboundCallback"""
        instance = self.make_instance(True)
        assert instance is not None
        assert isinstance(instance, InboundCallback)
        assert isinstance(instance.time, datetime)
        assert instance.type == 'message-received'
        assert instance.to == '+15552223333'
        assert instance.description == 'Incoming message received'
        assert isinstance(instance.message, InboundCallbackMessage)
        assert instance.message.id == '1661365814859loidf7mcwd4qacn7'
        assert instance.message.owner == '+15553332222'
        assert instance.message.application_id == '93de2206-9669-4e07-948d-329f4b722ee2'
        assert isinstance(instance.message.time, datetime)
        assert instance.message.segment_count == 1
        assert instance.message.direction == 'in'
        assert instance.message.to == ['+15552223333']
        assert instance.message.var_from == '+15553332222'

if __name__ == '__main__':
    unittest.main()
