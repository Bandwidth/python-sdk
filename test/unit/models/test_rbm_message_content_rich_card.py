# coding: utf-8

"""
    Bandwidth

    Bandwidth's Communication APIs

    The version of the OpenAPI document: 1.0.0
    Contact: letstalk@bandwidth.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bandwidth.models.rbm_message_content_rich_card import RbmMessageContentRichCard
from bandwidth.models.rbm_standalone_card import RbmStandaloneCard
from bandwidth.models.rbm_message_carousel_card import RbmMessageCarouselCard
from bandwidth.models.rbm_card_content import RbmCardContent
from bandwidth.models.rbm_card_content_media import RbmCardContentMedia
from bandwidth.models.multi_channel_action import MultiChannelAction
from bandwidth.models.rbm_action_base import RbmActionBase

class TestRbmMessageContentRichCard(unittest.TestCase):
    """RbmMessageContentRichCard unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RbmMessageContentRichCard:
        """Test RbmMessageContentRichCard
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """

    def testRbmMessageContentRichCard(self):
        """Test RbmMessageContentRichCard"""
        model_rbm_standalone_card = RbmMessageContentRichCard(RbmStandaloneCard(
            orientation = 'VERTICAL',
                thumbnail_image_alignment = 'LEFT',
                card_content = RbmCardContent(
                    title = 'Bandwidth',
                    description = 'Bandwidth is a communications platform as a service (CPaaS) company.',
                    media = RbmCardContentMedia(
                        file_url = 'https://dev.bandwidth.com/images/bandwidth-logo.png',
                        thumbnail_url = 'https://dev.bandwidth.com/images/bandwidth-logo.png',
                        height = 'SHORT'
                    ),
                    suggestions = [
                        MultiChannelAction(
                            RbmActionBase(
                                type = 'REPLY',
                                text = 'Hello world',
                                post_back_data = '[B@32298473'
                            )
                        )
                    ]
                ),
                suggestions = [
                    MultiChannelAction(
                        RbmActionBase(
                            type = 'REPLY',
                            text = 'Hello world',
                            post_back_data = '[B@32298473'
                        )
                    )
                ]
        ))
        model_rbm_message_carousel_card = RbmMessageContentRichCard(RbmMessageCarouselCard(
            card_width = 'SMALL',
            card_contents = [
                RbmCardContent(
                    title = 'Bandwidth', 
                    description = 'Bandwidth is a communications platform as a service (CPaaS) company.', 
                    media = RbmCardContentMedia(
                        file_url = 'https://dev.bandwidth.com/images/bandwidth-logo.png',
                        thumbnail_url = 'https://dev.bandwidth.com/images/bandwidth-logo.png',
                        height = 'SHORT'
                    ), 
                    suggestions = [
                        MultiChannelAction(
                            RbmActionBase(
                                type = 'REPLY',
                                text = 'Hello world',
                                post_back_data = '[B@32298473'
                            )
                        )
                    ],
                )
            ],
            suggestions = [
                MultiChannelAction(
                    RbmActionBase(
                        type = 'REPLY',
                        text = 'Hello world',
                        post_back_data = '[B@32298473'
                    )
                )
            ]
        ))

        assert model_rbm_standalone_card is not None
        assert isinstance(model_rbm_standalone_card, RbmMessageContentRichCard)
        assert isinstance(model_rbm_standalone_card.actual_instance, RbmStandaloneCard)
        assert model_rbm_message_carousel_card is not None
        assert isinstance(model_rbm_message_carousel_card, RbmMessageContentRichCard)
        assert isinstance(model_rbm_message_carousel_card.actual_instance, RbmMessageCarouselCard)

if __name__ == '__main__':
    unittest.main()
