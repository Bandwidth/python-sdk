# coding: utf-8

"""
    Bandwidth

    Bandwidth's Communication APIs

    The version of the OpenAPI document: 1.0.0
    Contact: letstalk@bandwidth.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bandwidth.models.multi_channel_message_callback_data import MultiChannelMessageCallbackData

class TestMultiChannelMessageCallbackData(unittest.TestCase):
    """MultiChannelMessageCallbackData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MultiChannelMessageCallbackData:
        """Test MultiChannelMessageCallbackData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        if include_optional:
            return MultiChannelMessageCallbackData(
                message_id = '1589228074636lm4k2je7j7jklbn2',
                status = 'DELIVERED',
                direction = 'OUTBOUND',
                var_from = 'BandwidthRBM',
                to = '+15552223333',
                application_id = '93de2206-9669-4e07-948d-329f4b722ee2',
                channel = 'RBM',
                tag = 'custom string'
            )
        else:
            return MultiChannelMessageCallbackData(
        )

    def testMultiChannelMessageCallbackData(self):
        """Test MultiChannelMessageCallbackData"""
        instance = self.make_instance(True)
        assert instance is not None
        assert isinstance(instance, MultiChannelMessageCallbackData)
        assert instance.message_id == '1589228074636lm4k2je7j7jklbn2'
        assert instance.status == 'DELIVERED'
        assert instance.direction == 'OUTBOUND'
        assert instance.var_from == 'BandwidthRBM'
        assert instance.to == '+15552223333'
        assert instance.application_id == '93de2206-9669-4e07-948d-329f4b722ee2'
        assert instance.channel == 'RBM'
        assert instance.tag == 'custom string'

if __name__ == '__main__':
    unittest.main()
